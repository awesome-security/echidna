#!/usr/bin/perl -w 

use lib 'lib';
use v5.10;
use strict;

# POE Imports
use POE qw(Component::Server::TCP);

# NSMF Imports
use NSMF;
use NSMF::Util;
<<<<<<< HEAD
=======
use NSMF::ProtoFactory;
use NSMF::ConfigMngr;

# Misc
use Data::Dumper;
>>>>>>> 4931d83022ea8f230dcb07c8f107316f66b5f6ce

our $VERSION = '0.1';

# Configuration
<<<<<<< HEAD
my $nsmf = NSMF->new;
my ($config, $proto);

$config  = $nsmf->config;
$proto   = $nsmf->proto;
=======
my $config  = NSMF::ConfigMngr->instance;
my $proto   = NSMF::ProtoFactory->create("JSON");
>>>>>>> 4931d83022ea8f230dcb07c8f107316f66b5f6ce

# Server 
new POE::Component::Server::TCP(
    Alias              => $config->name,
    Address            => $config->address,
    Port               => $config->port,
    ClientConnected    => \&connected, 
    ClientDisconnected => \&disconnected,
    ClientInput => sub { 
        my ($kernel, $heap, $input) = @_[KERNEL, HEAP, ARG0];
        $kernel->yield('dispatcher', $input);
    },
    ClientFilter => "POE::Filter::Stream",
    ObjectStates => [ $proto => $proto->states ],
);

sub connected {
    my ($session, $heap) = @_[SESSION, HEAP];
    
    puts " [+] Client connected: ". $heap->{remote_ip};

    # Initialization
    $heap->{status}     = 'REQ';
    $heap->{nodename}   = undef;
    $heap->{session_id} = undef;
    $heap->{netgroup}   = undef;
    $heap->{modules_sessions} = [];
}

sub disconnected {
    my ($session, $heap) = @_[SESSION, HEAP];
    puts "Client with " . $session->ID . " disconnected";
}

puts 'Server Initialized ..';
POE::Kernel->run();
exit(0);
