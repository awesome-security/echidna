#!/usr/bin/perl
#
# This file is part of the NSM framework
#
# Copyright (C) 2010-2011, Edward Fjellsk√•l <edwardfjellskaal@gmail.com>
#                          Eduardo Urias    <windkaiser@gmail.com>
#                          Ian Firns        <firnsy@securixlive.com>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License Version 2 as
# published by the Free Software Foundation.  You may not use, modify or
# distribute this program under any other version of the GNU General
# Public License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#

use lib '../lib';

use warnings;
use strict;
use v5.10;

#
# PERL INCLUDES
#
use POE qw(Component::Server::TCP);

#
# NSMF INCLUDES
#
use NSMF::Server;
use NSMF::Common::Logger;

#
# GLOBALS
#
our $VERSION = '0.1';

my $nsmf    = NSMF::Server->new();
my $config  = $nsmf->config();
my $proto   = $nsmf->proto();
my $logger  = NSMF::Common::Logger->new();

# Server 
new POE::Component::Server::TCP(
    Alias              => $config->name,
    Address            => $config->address,
    Port               => $config->port,
    ClientConnected    => \&connected, 
    ClientDisconnected => \&disconnected,
    ClientInput => sub { 
        my ($kernel, $heap, $input) = @_[KERNEL, HEAP, ARG0];
        $kernel->yield('dispatcher', $input);
    },
    ClientFilter => "POE::Filter::Stream",
    ObjectStates => [ $proto => $proto->states ],
);

sub connected {
    my ($session, $heap) = @_[SESSION, HEAP];
    
    $logger->debug('Client connected: ' . $heap->{remote_ip});

    # Initialization
    $heap->{status}     = 'REQ';
    $heap->{nodename}   = undef;
    $heap->{session_id} = undef;
    $heap->{netgroup}   = undef;
    $heap->{modules_sessions} = [];
}

sub disconnected {
    my ($session, $heap) = @_[SESSION, HEAP];
    $logger->debug('Client with ' . $session->ID . ' disconnected');
}

$logger->info('Server Initialized ...');
POE::Kernel->run();
exit(0);
